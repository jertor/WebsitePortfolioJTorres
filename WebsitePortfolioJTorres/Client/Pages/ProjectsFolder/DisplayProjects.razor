@using Microsoft.AspNetCore.Authorization
@using WebsitePortfolioJTorres.Shared.Models
@using WebsitePortfolioJTorres.Shared.Interfaces
@using WebsitePortfolioJTorres.Client.Services
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager urlNavigationManager
@inject IProjectService _projectService
@inject PublicClient PublicClient
<!--Header-->
<h4 style="background-color:#f8f9fa; text-align:center">@Title</h4>


<body style="background-color:#f8f9fa">

    <table class=" table table-hover" height="100%" width="100%">
        <thead class="thead-dark">
            <tr>
                <th width="15%">Title</th>
                <th width="35%">Description</th>
                <th width="50%">Image</th>
            </tr>

        </thead>
        <tbody>
            <tr>
                <td>Project 1</td>
                <td>This is a test....</td>.
                <td>
                    <img height="50%" width="85%" src="/StaticFiles/images/Matrix2.jpg" />
                    @*<img height="50%" width="50%" src="/StaticFiles/images/Matrix2.jpg" @onclick="NavToProjects" />*@
                </td>
            </tr>
            <tr>
                <td>Project 2</td>
                <td>This is NOT a test.... I repeat this is NOT a test... </td>
                <td>

                    <img height="50%" width="85%" src="/StaticFiles/images/Image4.jpg" />
                </td>
            </tr>
            <tr>
                <td>Project 3</td>
                <td>Merry Christmas Rob! Thanks for all your help this semester!! </td>
                <td>

                    <img height="50%" width="85%" src="/StaticFiles/images/merryChristmas.jpg" />
                </td>
            </tr>
        </tbody>
    </table>
</body>




@code {
    [Parameter]
    public string Title { get; set; }

    private AuthenticationState authState;
    List<Project> ProjList = new List<Project>();


    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //ProjList = await _projectService.GetProjects();

        //var result = PublicClient.Client.GetFromJsonAsync<List<Project>>("api/myprojects");
        //Used for Unauthorized Viewing
        ProjList = await PublicClient.Client.GetFromJsonAsync<List<Project>>("api/myprojects");

    }


    private void NavToProjects()
    {
        urlNavigationManager.NavigateTo("test");
    }
}



