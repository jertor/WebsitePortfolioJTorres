@page "/addedu"
@using WebsitePortfolioJTorres.Shared.Interfaces;
@using WebsitePortfolioJTorres.Shared.Models;
@using Microsoft.AspNetCore.Components
@inject HttpClient _httpClient
@inject NavigationManager _urlNavigationManager
@inject IResumeService _resumeService
<!--Header-->
<h5>Add Education</h5>

<!--Body-->
<EditForm Model="@ResumeField">


    <div class="form-group row mb1">
        <label class="col-sm-3 col-form-label">School Name:</label>
        <div class="col-sm-3">
            <InputText class="form-control"
                       @bind-Value="@ResumeField.MyEducation.SchoolName" />
            @*<ValidationMessage For="@resume.MyContactInfo.Name" />*@
        </div>
    </div>

    <div class="form-group row mb1">
        <label class="col-sm-3 col-form-label">Start:</label>
        <div class="col-sm-3">
            <InputDate class="form-control"
                       @bind-Value="@ResumeField.MyEducation.StartDate" />
            @*<ValidationMessage For="@resume.MyContactInfo.Name" />*@
        </div>
    </div>

    <div class="form-group row mb1">
        <label class="col-sm-3 col-form-label">End:</label>
        <div class="col-sm-3">
            <InputDate class="form-control"
                       @bind-Value="@ResumeField.MyEducation.EndDate" />
            @*<ValidationMessage For="@resume.MyContactInfo.Name" />*@
        </div>
    </div>


    <button type="submit" class="btn btn-success" @onclick="AddOnValidSubmit">Add</button>
    <button type="submit" class="btn btn-light" @onclick="Cancel">Cancel</button>

    <!--Buttons-->
    @*<div class="col">
            <button type="submit"
                    @onclick="@Update"
                    class="@ButtonClass">
                @ButtonTitle
            </button>
        </div>*@


</EditForm>



@code {
    public Resume ResumeField { get; set; } = new Resume();

    private async Task AddOnValidSubmit()
    {
        Console.WriteLine("AddContact called from EditEducation.razor");
        await _resumeService.AddEducation(ResumeField.MyEducation);
        StateHasChanged();
        _urlNavigationManager.NavigateTo("resume");
    }

    private void Cancel()
    {
        _urlNavigationManager.NavigateTo("resume");
    }



    //[Parameter]
    //public string ButtonTitle { get; set; }
    //[Parameter]
    //public string ButtonClass { get; set; }
    //[Parameter]
    ////public Resume ResumeField { get; set; }
    //public Education EducationField { get; set; }
    //[Parameter]
    //public EventCallback Update { get; set; }
    //[Parameter]
    //public EventCallback Add { get; set; }
    //[Parameter]
    //public EventCallback<Education> EduChanged { get; set; }
    //private void FieldChanged(string fieldName)
    //{
    //    EduChanged.InvokeAsync(EducationField);
    //}


}
